"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _managementModel = _interopRequireDefault(require("./management-model"));

var _attributes = _interopRequireDefault(require("./attributes"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Webhook =
/*#__PURE__*/
function (_ManagementModel) {
  _inherits(Webhook, _ManagementModel);

  function Webhook() {
    _classCallCheck(this, Webhook);

    return _possibleConstructorReturn(this, _getPrototypeOf(Webhook).apply(this, arguments));
  }

  _createClass(Webhook, [{
    key: "pathPrefix",
    value: function pathPrefix() {
      return "/a/".concat(this.clientId);
    }
  }, {
    key: "saveRequestBody",
    value: function saveRequestBody() {
      var json = {}; // We can only update the state of an existing webhook

      if (this.id) {
        json['state'] = this.state;
      } else {
        json['callback_url'] = this.callbackUrl;
        json['state'] = this.state ? this.state : 'active';
        json['triggers'] = this.constructor.attributes.triggers.toJSON(this.triggers);
      }

      return json;
    }
  }, {
    key: "save",
    value: function save() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
      return this._save(params, callback);
    }
  }, {
    key: "toJSON",
    value: function toJSON() {
      var json = _get(_getPrototypeOf(Webhook.prototype), "toJSON", this).apply(this, arguments);

      delete json['object'];
      return json;
    }
  }]);

  return Webhook;
}(_managementModel["default"]);

exports["default"] = Webhook;
Webhook.collectionName = 'webhooks';
Webhook.attributes = {
  id: _attributes["default"].String({
    modelKey: 'id'
  }),
  applicationId: _attributes["default"].String({
    modelKey: 'applicationId',
    jsonKey: 'application_id'
  }),
  callbackUrl: _attributes["default"].String({
    modelKey: 'callbackUrl',
    jsonKey: 'callback_url'
  }),
  state: _attributes["default"].String({
    modelKey: 'state'
  }),
  triggers: _attributes["default"].StringList({
    modelKey: 'triggers'
  }),
  version: _attributes["default"].String({
    modelKey: 'version'
  })
};